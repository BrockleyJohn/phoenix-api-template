openapi: 3.0.0
info:
  title: PhoenixCart API
  description: |
    This is the official API documentation for PhoenixCart's RESTful endpoints.
    The API follows standard HTTP response codes and uses JSON for all responses.
  version: 1.1.0.4
  contact:
    name: PhoenixCart Support
    url: https://phoenixcart.org/support
  license:
    name: GNU General Public License
    url: https://www.gnu.org/licenses/gpl-3.0.html

servers:
  - url: /api
    description: Main API server

components:
  securitySchemes:
    sessionCookie:
      type: apiKey
      in: cookie
      name: ceid
      description: Session cookie for authentication
  
  schemas:
    Order_Item:
      type: object
      properties:
        name:
          type: string
          example: "Sample Product"
        model:
          type: string
          example: "MODEL123"
        quantity:
          type: integer
          example: 2
        final_price:
          type: string
          example: "19.98"
        formatted_price:
          type: string
          example: "$19.98"
        attributes:
          type: array
          items:
            type: object
            properties:
              option:
                type: string
                example: "Color"
              value:
                type: string
                example: "Red"

    Order_Total:
      type: object
      properties:
        title:
          type: string
          example: "Sub-Total"
        text:
          type: string
          example: "$19.98"
        class:
          type: string
          example: "ot_subtotal"

    Order_Summary:
      type: object
      properties:
        products:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                example: "Sample Product"
              quantity:
                type: integer
                example: 2
              final_price:
                type: string
                example: "19.98"
              formatted_price:
                type: string
                example: "$19.98"
              attributes:
                type: array
                items:
                  type: object
                  properties:
                    option:
                      type: string
                      example: "Color"
                    value:
                      type: string
                      example: "Red"
        totals:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                example: "Sub-Total"
              text:
                type: string
                example: "$19.98"
              class:
                type: string
                example: "ot_subtotal"
        shipping_method:
          type: string
          example: "Flat Rate (Best Way) - $5.00"
        payment_method:
          type: string
          example: "Cash on Delivery"
        comments:
          type: string
          example: "Please deliver after 5 PM"

    Payment_Confirmation:
      type: object
      properties:
        title:
          type: string
          description: Title/heading for the payment confirmation section
          example: "Credit Card Information"
        fields:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                description: Label for the field
                example: "Card Number"
              field:
                type: string
                description: HTML for the input field
                example: "<input type='text' name='cc_number'>"

    Payment_Method:
      type: object
      properties:
        id:
          type: string
          example: "cod"
          description: Unique identifier for the payment method
        module:
          type: string
          example: "Cash on Delivery"
          description: Display name of the payment module
        fields:
          type: array
          items:
            type: object
            properties:
              title:
                type: string
                example: "Credit Card Number"
              field:
                type: string
                description: HTML for the input field
                example: "<input type='text' name='cc_number'>"

    Shipping_Method:
      type: object
      properties:
        id:
          type: string
          example: "flat_flat"
          description: Unique identifier for the shipping method
        module:
          type: string
          example: "Flat Rate"
          description: Name of the shipping module
        methods:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
                example: "flat"
              title:
                type: string
                example: "Best Way"
              cost:
                type: string
                example: "5.00"
              formatted_cost:
                type: string
                example: "$5.00"
              tax:
                type: string
                example: "0.00"
        error:
          type: string
          description: Error message if the shipping method is not available
          example: "This shipping method is not available. Please select another shipping method for your order."

    Error:
      type: object
      properties:
        success:
          type: boolean
          example: false
        status:
          type: string
          example: "error"
        message:
          type: string
          example: "Product not found"

    Success_Response:
      type: object
      properties:
        success:
          type: boolean
          example: true
        status:
          type: string
          example: "success"
        data:
          type: object
          description: Response payload

    Cart_Item:
      type: object
      properties:
        id:
          type: string
          description: Unique cart item ID
        name:
          type: string
          description: Product name
        model:
          type: string
          description: Product model
        price:
          type: string
          format: decimal
          description: Unit price
        quantity:
          type: integer
          description: Quantity in cart
        total:
          type: string
          format: decimal
          description: Total price for this line item
        attributes:
          type: object
          additionalProperties:
            type: string
          description: Product attributes

    Cart:
      type: object
      properties:
        id:
          type: string
          description: Cart ID (session ID)
        total:
          type: string
          format: decimal
          description: Cart total
        total_items:
          type: integer
          description: Total number of items in cart
        items:
          type: array
          items:
            $ref: '#/components/schemas/Cart_Item'
        totals:
          type: object
          properties:
            subtotal:
              type: string
              format: decimal
            tax:
              type: string
              format: decimal
            shipping:
              type: string
              format: decimal
            total:
              type: string
              format: decimal

      Product:
        type: object
        properties:
          id:
            type: integer
            example: 123
          name:
            type: string
            example: "Sample Product"
          model:
            type: string
            example: "MOD123"
          price:
            type: string
            example: "$19.99"
          final_price:
            type: string
            example: "$19.99"
          tax_class_id:
            type: integer
            example: 1
          quantity:
            type: integer
            example: 10
          image:
            type: string
            example: "products/sample.jpg"
          url:
            type: string
            example: "/product/sample-product-p-123"
          description:
            type: string
            example: "This is a sample product description"
          manufacturer:
            type: string
            example: "Sample Manufacturer"
          weight:
            type: string
            example: "1.5 lbs"
          date_available:
            type: string
            format: date
            example: "2025-01-01"

paths:
  /login.php:
    post:
      summary: Authenticate user
      description: |
        Authenticate a user with email and password.

        On successful authentication, the server will respond with a 302 redirect to either:
        - The user's account page (/account.php)
        - The page they were previously viewing (from navigation history)

        On failure, the API template will be rendered, returning a 400 status with error details.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - email_address
                - password
              properties:
                email_address:
                  type: string
                  format: email
                  description: User's registered email address
                password:
                  type: string
                  format: password
                  description: User's password
      responses:
        '302':
          description: Successful authentication, redirecting to account or previous page
          headers:
            Location:
              schema:
                type: string
                format: uri
                example: /account.php
        '400':
          description: Authentication failed or invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                    description: Always false for error responses
                  status:
                    type: string
                    example: "error"
                  message:
                    type: string
                    description: Error message describing the failure
                    example: "Invalid email address or password"
  
  /logoff.php:
    get:
      summary: Log out current user
      description: |
        Terminates the current user session and redirects to the home page.

        This endpoint always returns a 200 status with a success flag,
        regardless of whether a user was actually logged in.
      tags:
        - Authentication
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    description: Always true for this endpoint

  /create_account.php:
    post:
      summary: Create a new customer account
      description: |
        Creates a new customer account with the provided information.

        On successful account creation, the user will be automatically logged in
        and redirected to create_account_success.php. The API template for this
        endpoint is only used for error cases.

        If there are validation errors, a 400 status will be returned with
        details about the validation failures.
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              required:
                - email_address
                - password
                - confirmation
                - firstname
                - lastname
                - street_address
                - postcode
                - city
                - country
                - telephone
              properties:
                gender:
                  type: string
                  enum: [m, f]
                  description: Customer's gender (m = male, f = female)
                firstname:
                  type: string
                  description: Customer's first name
                lastname:
                  type: string
                  description: Customer's last name
                email_address:
                  type: string
                  format: email
                  description: Customer's email address (used for login)
                password:
                  type: string
                  format: password
                  minLength: 8
                  description: Account password
                confirmation:
                  type: string
                  format: password
                  description: Password confirmation (must match password)
                company:
                  type: string
                  description: Company name (optional)
                street_address:
                  type: string
                  description: Street address
                suburb:
                  type: string
                  description: Suburb/Neighborhood (optional)
                postcode:
                  type: string
                  description: Postal/ZIP code
                city:
                  type: string
                  description: City
                state:
                  type: string
                  description: State/Province (if applicable)
                country:
                  type: string
                  description: ISO 2-letter country code
                telephone:
                  type: string
                  description: Phone number
                fax:
                  type: string
                  description: Fax number (optional)
                newsletter:
                  type: boolean
                  description: Whether to subscribe to the newsletter
      responses:
        '302':
          description: Account created successfully, redirecting to create_account_success.php
          headers:
            Location:
              schema:
                type: string
                format: uri
                example: /create_account_success.php
        '400':
          description: Validation failed or invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Validation failed"
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["Email address already exists", "Password is too short"]
        '405':
          description: Method not allowed
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: false
                  message:
                    type: string
                    example: "Method not allowed"
                  errors:
                    type: array
                    items:
                      type: string
                    example: ["Only POST method is supported"]

  /create_account_success.php:
    get:
      summary: Account creation success
      description: |
        This endpoint is shown after a successful account creation.

        It returns a simple success response to confirm that the account
        was created successfully.
      tags:
        - Authentication
      responses:
        '200':
          description: Account created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                    description: Always true for this endpoint

  /index.php:
    get:
      summary: List categories
      description: |
        Retrieves a list of categories.
        
        - When no category is specified (no cPath parameter), returns top-level categories
        - When a category ID is provided (via cPath), returns subcategories in that category
      tags:
        - Categories
      parameters:
        - name: cPath
          in: query
          description: Category path (e.g., '1_5' for category 5 under category 1)
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved categories
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      page:
                        type: string
                        example: "index"
                      view:
                        type: string
                        example: "nested_category"
                      category_id:
                        type: integer
                        example: 0
                      current_category:
                        type: object
                        properties:
                          id:
                            type: integer
                            example: 0
                          name:
                            type: string
                            example: "Top Level Categories"
                          count:
                            type: integer
                            example: 5
                      categories:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              example: 5
                            name:
                              type: string
                              example: "Electronics"
                            image:
                              type: string
                              example: "categories/electronics.jpg"
                            url:
                              type: string
                              example: "/index.php?cPath=5"
                            has_children:
                              type: boolean
                              example: true
                            parent_id:
                              type: integer
                              example: 0
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: "info"
                            text:
                              type: string
                              example: "Category loaded successfully"
                      timestamp:
                        type: string
                        format: date-time
                        example: "2025-08-03T18:45:23+00:00"
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                        example: "1.0.0"
                      documentation:
                        type: string
                        example: "https://phoenixcart.org/development/api"
        '404':
          description: Category not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
                
  /advanced_search_result.php:
    get:
      summary: Search and list products
      description: |
        Retrieves a list of products based on search criteria.

        - Supports filtering by category, manufacturer, price range, and keywords
        - Results are paginated and sortable
      tags:
        - Products
      parameters:
        - name: keywords
          in: query
          description: Search keywords (space-separated)
          required: false
          schema:
            type: string
        - name: search_in_description
          in: query
          description: Include product descriptions in keyword search
          required: false
          schema:
            type: boolean
            default: false
        - name: categories_id
          in: query
          description: Filter by category ID
          required: false
          schema:
            type: integer
        - name: manufacturers_id
          in: query
          description: Filter by manufacturer ID
          required: false
          schema:
            type: integer
        - name: pfrom
          in: query
          description: Minimum price
          required: false
          schema:
            type: number
            format: float
        - name: pto
          in: query
          description: Maximum price
          required: false
          schema:
            type: number
            format: float
        - name: page
          in: query
          description: Page number for pagination (default: 1)
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
      responses:
        '200':
          description: Successfully retrieved products
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      page:
                        type: string
                        example: "advanced_search_result"
                      timestamp:
                        type: string
                        format: date-time
                      products:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
                      listing:
                        type: object
                        properties:
                          product_count:
                            type: integer
                            example: 42
                          page_count:
                            type: integer
                            example: 3
                          current_page:
                            type: integer
                            example: 1
                      messages:
                        type: array
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              example: "info"
                            text:
                              type: string
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string

  /account_history.php:
    get:
      summary: Get order history
      description: |
        Retrieves the authenticated customer's order history.

        - Returns a paginated list of the customer's orders
        - Each order includes basic information like order ID, date, status, and total
        - Requires customer authentication
      tags:
        - Orders
      security:
        - customer_auth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination (default: 1)
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
      responses:
        '200':
          description: Successfully retrieved order history
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      page:
                        type: string
                        example: "account_history"
                      timestamp:
                        type: string
                        format: date-time
                      orders:
                        type: array
                        items:
                          type: object
                          properties:
                            orders_id:
                              type: integer
                              example: 1001
                            date_purchased:
                              type: string
                              format: date-time
                              example: "2025-01-15 14:32:10"
                            orders_status_name:
                              type: string
                              example: "Processing"
                            order_total:
                              type: string
                              example: "$99.99"
                            link:
                              type: string
                              example: "/account_history_info.php?order_id=1001"
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
        '401':
          description: Unauthorized - customer not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /index.php:
    get:
      summary: Set currency
      description: |
        Sets the currency for the current session.

        - Updates the currency in the user's session
        - Returns the new currency information
        - If no currency is provided, falls back to default currency
      tags:
        - Session
      parameters:
        - name: currency
          in: query
          description: Currency code to set (e.g., USD, EUR, GBP)
          required: false
          schema:
            type: string
            example: "USD"
      responses:
        '200':
          description: Currency updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string

  /index.php:
    get:
      summary: Set language
      description: |
        Sets the language for the current session.

        - Updates the language in the user's session
        - Returns the new language information
        - If no language is provided, falls back to default language
      tags:
        - Session
      parameters:
        - name: language
          in: query
          description: Language code to set (e.g., en, es, fr)
          required: false
          schema:
            type: string
            example: "en"
      responses:
        '200':
          description: Language updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string

  /shopping_cart.php:
    get:
      summary: Get shopping cart contents
      description: |
        Retrieves the current contents of the shopping cart.

        - Returns a list of products in the cart with quantities and attributes
        - Includes pricing and weight information
      tags:
        - Shopping Cart
      responses:
        '200':
          description: Successfully retrieved shopping cart contents
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      page:
                        type: string
                        example: "shopping_cart"
                      timestamp:
                        type: string
                        format: date-time
                      products:
                        type: array
                        items:
                          $ref: '#/components/schemas/CartProduct'
                      checkout_link:
                        type: string
                        example: "/checkout_shipping.php"
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string

  /shopping_cart.php:
    get:
      summary: Add product to cart (Buy Now)
      description: |
        Adds a product to the shopping cart using the 'buy_now' action.
        
        - Adds the specified product with given quantity and attributes
        - Validates product availability and attributes
        - Returns updated cart contents
      tags:
        - Shopping Cart
      parameters:
        - name: action
          in: query
          required: true
          description: Must be set to 'buy_now' for this operation
          schema:
            type: string
            example: "buy_now"
        - name: products_id
          in: query
          required: true
          description: Product ID to add to cart
          schema:
            type: string
            example: "1"
        - name: qty
          in: query
          required: false
          description: Quantity to add (default: 1)
          schema:
            type: integer
            example: 1
            default: 1
      responses:
        '200':
          description: Product added to cart successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Product added to cart"
                      cart_contents:
                        $ref: '#/components/schemas/CartContents'
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
        '400':
          description: Invalid product or attributes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /shopping_cart.php:
    post:
      summary: Update cart item quantity
      description: |
        Updates the quantity of a product in the shopping cart.
        
        - Updates the quantity of the specified cart items
        - Setting quantity to 0 removes the item
        - Handles multiple items in a single request
        - Uses form data with array parameters for cart_quantity[] and products_id[]
      tags:
        - Shopping Cart
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                action:
                  type: string
                  example: "update_product"
                cart_quantity:
                  type: array
                  items:
                    type: integer
                  description: Array of quantities for each product
                  example: [2, 1]
                products_id:
                  type: array
                  items:
                    type: string
                  description: Array of product IDs with attributes (uprid)
                  example: ["1{1}2{3}4", "5"]
      responses:
        '200':
          description: Cart updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: "Cart updated"
                      cart_contents:
                        $ref: '#/components/schemas/CartContents'
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
        '400':
          description: Invalid product or quantity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /checkout_shipping.php:
    get:
      summary: Initiate checkout - Select shipping method
      description: |
        Retrieves available shipping methods for the current order.

        - Lists all available shipping methods with costs
        - Shows current shipping address
        - Requires an authenticated session
      tags:
        - Checkout
      responses:
        '200':
          description: Successfully retrieved shipping methods
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      shipping_address:
                        $ref: '#/components/schemas/Address'
                      shipping_methods:
                        type: array
                        items:
                          $ref: '#/components/schemas/ShippingMethod'
                      selected_shipping_method:
                        type: string
                        example: "flat_flat"
                        description: ID of the currently selected shipping method if any
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
        '401':
          description: Unauthorized - user not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Select shipping method
      description: |
        Selects a shipping method for the current order.

        - Updates the order with the selected shipping method
        - Validates the selected shipping method
        - Redirects to payment selection on success
      tags:
        - Checkout
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                action:
                  type: string
                  example: "process"
                shipping:
                  type: string
                  description: Selected shipping method ID
                  example: "flat_flat"
      responses:
        '200':
          description: Shipping method selected successfully, redirects to payment
          headers:
            Location:
              schema:
                type: string
                example: "/checkout_payment.php"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "redirect"
                  redirect:
                    type: string
                    example: "/checkout_payment.php"
        '400':
          description: Invalid shipping method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /checkout_shipping_address.php:
    get:
      summary: Manage shipping address
      description: |
        Retrieves the list of saved shipping addresses for the current customer.

        - Lists all saved shipping addresses
        - Indicates the currently selected address
        - Allows selecting an existing address or adding a new one
      tags:
        - Checkout
      responses:
        '200':
          description: Successfully retrieved shipping addresses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      addresses:
                        type: array
                        items:
                          $ref: '#/components/schemas/Address'
                      selected_address_id:
                        type: integer
                        example: 1
                        description: ID of the currently selected shipping address
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
        '401':
          description: Unauthorized - user not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Select shipping address
      description: |
        Selects a shipping address for the current order.

        - Updates the order with the selected shipping address
        - Validates the selected address
        - Redirects back to shipping method selection
      tags:
        - Checkout
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                action:
                  type: string
                  example: "select"
                address:
                  type: integer
                  description: Address book ID to use for shipping
                  example: 1
      responses:
        '200':
          description: Address selected successfully, redirects to shipping methods
          headers:
            Location:
              schema:
                type: string
                example: "/checkout_shipping.php"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "redirect"
                  redirect:
                    type: string
                    example: "/checkout_shipping.php"
        '400':
          description: Invalid address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /checkout_payment.php:
    get:
      summary: Select payment method
      description: |
        Retrieves available payment methods for the current order.

        - Lists all available payment methods
        - Shows current billing address
        - Requires an authenticated session
      tags:
        - Checkout
      responses:
        '200':
          description: Successfully retrieved payment methods
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      billing_address:
                        $ref: '#/components/schemas/Address'
                      payment_methods:
                        type: array
                        items:
                          $ref: '#/components/schemas/Payment_Method'
                      selected_payment_method:
                        type: string
                        example: "cod"
                        description: ID of the currently selected payment method if any
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
        '401':
          description: Unauthorized - user not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Select payment method
      description: |
        Selects a payment method for the current order.

        - Updates the order with the selected payment method
        - Validates the selected payment method
        - Redirects to order confirmation on success
      tags:
        - Checkout
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                payment:
                  type: string
                  description: Selected payment method ID
                  example: "cod"
      responses:
        '200':
          description: Payment method selected successfully, redirects to confirmation
          headers:
            Location:
              schema:
                type: string
                example: "/checkout_confirmation.php"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "redirect"
                  redirect:
                    type: string
                    example: "/checkout_confirmation.php"
        '400':
          description: Invalid payment method
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /checkout_payment_address.php:
    get:
      summary: Manage billing address
      description: |
        Retrieves the list of saved addresses for the current customer.

        - Lists all saved addresses
        - Indicates the currently selected billing address
        - Allows selecting an existing address or adding a new one
      tags:
        - Checkout
      responses:
        '200':
          description: Successfully retrieved billing addresses
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      addresses:
                        type: array
                        items:
                          $ref: '#/components/schemas/Address'
                      selected_address_id:
                        type: integer
                        example: 1
                        description: ID of the currently selected billing address
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
        '401':
          description: Unauthorized - user not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Select or add billing address
      description: |
        Selects a billing address for the current order or adds a new one.

        - If action is 'select', updates the order with the selected billing address
        - If action is 'submit', adds a new billing address and selects it
        - Validates the address data
        - Redirects back to payment method selection
      tags:
        - Checkout
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - type: object
                  properties:
                    action:
                      type: string
                      enum: [select]
                      example: "select"
                    address:
                      type: integer
                      description: Address book ID to use for billing
                      example: 1
                  required:
                    - action
                    - address
                - type: object
                  properties:
                    action:
                      type: string
                      enum: [submit]
                      example: "submit"
                    # Address fields will vary based on customer_data configuration
                    firstname:
                      type: string
                      example: "John"
                    lastname:
                      type: string
                      example: "Doe"
                    street_address:
                      type: string
                      example: "123 Main St"
                    city:
                      type: string
                      example: "Anytown"
                    postcode:
                      type: string
                      example: "12345"
                    country_id:
                      type: integer
                      example: 223
                    zone_id:
                      type: integer
                      example: 18
                  required:
                    - action
                    - firstname
                    - lastname
                    - street_address
                    - city
                    - postcode
                    - country_id
                    - zone_id
      responses:
        '200':
          description: Billing address updated successfully, redirects to payment method selection
          headers:
            Location:
              schema:
                type: string
                example: "/checkout_payment.php"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "redirect"
                  redirect:
                    type: string
                    example: "/checkout_payment.php"
        '400':
          description: Invalid address or missing required fields
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /checkout_confirmation.php:
    get:
      summary: Review order
      description: |
        Displays the order summary for review before final submission.

        - Shows all order details including products, shipping, and payment
        - Allows adding order comments
        - Displays any payment method specific confirmation fields
      tags:
        - Checkout
      responses:
        '200':
          description: Successfully retrieved order confirmation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      order:
                        $ref: '#/components/schemas/Order_Summary'
                      payment_confirmation:
                        $ref: '#/components/schemas/Payment_Confirmation'
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
        '401':
          description: Unauthorized - user not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      summary: Submit order
      description: |
        Submits the order for processing.

        - Validates all order details
        - Processes payment if required
        - Creates the order in the system
        - Redirects to success page on success
      tags:
        - Checkout
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                comments:
                  type: string
                  description: Optional order comments
                  example: "Please deliver after 5 PM"
                # Payment method specific fields will vary
      responses:
        '200':
          description: Order submitted successfully, redirects to success page
          headers:
            Location:
              schema:
                type: string
                example: "/checkout_success.php"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "redirect"
                  redirect:
                    type: string
                    example: "/checkout_success.php"
        '400':
          description: Order validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '402':
          description: Payment processing failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /checkout_process.php:
    post:
      summary: Process order
      description: |
        Finalizes and processes the order.

        - Validates all order details
        - Processes payment
        - Creates the order in the system
        - Sends confirmation emails
        - Clears the shopping cart
        - Redirects to success page on success
      tags:
        - Checkout
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                comments:
                  type: string
                  description: Optional order comments
                  example: "Please deliver after 5 PM"
                # Payment method specific fields will vary
      responses:
        '200':
          description: Order processed successfully, redirects to success page
          headers:
            Location:
              schema:
                type: string
                example: "/checkout_success.php"
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "redirect"
                  redirect:
                    type: string
                    example: "/checkout_success.php"
                  order_id:
                    type: integer
                    example: 10001
                    description: The ID of the created order
        '400':
          description: Order validation failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '402':
          description: Payment processing failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Order processing error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /checkout_success.php:
    get:
      summary: Order confirmation
      description: |
        Displays the order confirmation page after successful order processing.

        - Displays order number
        - Provides order status
      tags:
        - Checkout
      parameters:
        - name: action
          in: query
          description: If set to 'update', redirects to the home page
          required: false
          schema:
            type: string
            enum: [update]
      responses:
        '200':
          description: Successfully retrieved order confirmation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      order_id:
                        type: integer
                        example: 10001
                        description: The ID of the created order
                      order_status:
                        type: string
                        example: "Processing"
                        description: Current status of the order
                      date_ordered:
                        type: string
                        format: date-time
                        example: "2025-08-03T21:15:00Z"
                        description: Date and time when the order was placed
                      items:
                        type: array
                        items:
                          $ref: '#/components/schemas/Order_Item'
                      totals:
                        type: array
                        items:
                          $ref: '#/components/schemas/Order_Total'
                      delivery_address:
                        $ref: '#/components/schemas/Address'
                      billing_address:
                        $ref: '#/components/schemas/Address'
                      payment_method:
                        type: string
                        example: "Credit Card"
                      shipping_method:
                        type: string
                        example: "Standard Shipping"
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
        '302':
          description: Redirects to shopping cart if no recent orders found or user not logged in
          headers:
            Location:
              schema:
                type: string
                example: "/shopping_cart.php"
        '401':
          description: Unauthorized - user not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /account_history_info.php:
    get:
      summary: Get order details
      description: |
        Retrieves detailed information about a specific order.

        - Returns complete order details including products, totals, and status
        - Includes shipping and billing addresses
        - Requires customer authentication and ownership of the order
      tags:
        - Orders
      security:
        - customer_auth: []
      parameters:
        - name: order_id
          in: query
          description: ID of the order to retrieve
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Successfully retrieved order details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      page:
                        type: string
                        example: "account_history_info"
                      timestamp:
                        type: string
                        format: date-time
                      order_id:
                        type: string
                        example: "1001"
                      order:
                        type: object
                        description: Complete order details
                        properties:
                          id:
                            type: string
                            example: "1001"
                          status:
                            type: string
                            example: "Processing"
                          date:
                            type: string
                            format: date-time
                            example: "2025-01-15T14:32:10+00:00"
                          products:
                            type: array
                            items:
                              type: object
                              properties:
                                name:
                                  type: string
                                  example: "Sample Product"
                                model:
                                  type: string
                                  example: "MOD123"
                                price:
                                  type: string
                                  example: "$19.99"
                                quantity:
                                  type: integer
                                  example: 2
                                total:
                                  type: string
                                  example: "$39.98"
                          totals:
                            type: array
                            items:
                              type: object
                              properties:
                                title:
                                  type: string
                                  example: "Sub-Total"
                                text:
                                  type: string
                                  example: "$39.98"
                          shipping_address:
                            type: object
                            properties:
                              name:
                                type: string
                                example: "John Doe"
                              street_address:
                                type: string
                                example: "123 Main St"
                              city:
                                type: string
                                example: "Anytown"
                              postcode:
                                type: string
                                example: "12345"
                              country:
                                type: string
                                example: "United States"
                          billing_address:
                            type: object
                            properties:
                              name:
                                type: string
                                example: "John Doe"
                              street_address:
                                type: string
                                example: "123 Main St"
                              city:
                                type: string
                                example: "Anytown"
                              postcode:
                                type: string
                                example: "12345"
                              country:
                                type: string
                                example: "United States"
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
        '401':
          description: Unauthorized - customer not logged in
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - order not found or doesn't belong to the customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Order not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /product_info.php:
    get:
      summary: Get product details
      description: |
        Retrieves detailed information about a specific product.

        - Returns complete product data including all capabilities
        - Includes pricing, inventory, and product attributes
        - Returns 404 if product is not found or not available
      tags:
        - Products
      parameters:
        - name: products_id
          in: path
          description: ID of the product to retrieve
          required: true
          schema:
            type: integer
            minimum: 1
      responses:
        '200':
          description: Successfully retrieved product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "success"
                  data:
                    type: object
                    properties:
                      page:
                        type: string
                        example: "product_info"
                      timestamp:
                        type: string
                        format: date-time
                      product:
                        $ref: '#/components/schemas/Product'
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
        '404':
          description: Product not found or not available
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "failed"
                  success:
                    type: boolean
                    example: false
                  data:
                    type: object
                    properties:
                      page:
                        type: string
                        example: "product_info_not_found"
                      timestamp:
                        type: string
                        format: date-time
                      product_id:
                        type: integer
                        example: 999
                        nullable: true
                  meta:
                    type: object
                    properties:
                      api_version:
                        type: string
                      documentation:
                        type: string
